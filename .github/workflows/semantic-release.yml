name: Semantic Release

on:
  push:
    branches:
      - main
      - beta
      - alpha

permissions:
  contents: write
  issues: write
  pull-requests: write
  packages: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        persist-credentials: false

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Install semantic-release
      run: |
        npm install -g \
          semantic-release \
          @semantic-release/git \
          @semantic-release/github \
          @semantic-release/changelog \
          @semantic-release/exec \
          conventional-changelog-conventionalcommits

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: 1.23.x

    - name: Run tests
      run: go test -v ./...

    - name: Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GIT_AUTHOR_NAME: semantic-release-bot
        GIT_AUTHOR_EMAIL: semantic-release-bot@users.noreply.github.com
        GIT_COMMITTER_NAME: semantic-release-bot
        GIT_COMMITTER_EMAIL: semantic-release-bot@users.noreply.github.com
      run: npx semantic-release

  docker-release:
    needs: release
    runs-on: ubuntu-latest
    if: needs.release.outputs.new-release-published == 'true'
    steps:
    - uses: actions/checkout@v4
      with:
        ref: ${{ github.ref }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Get latest tag
      id: get_tag
      run: |
        git fetch --tags
        echo "tag=$(git describe --tags --abbrev=0)" >> $GITHUB_OUTPUT

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ secrets.DOCKER_USERNAME }}/breezegate
        tags: |
          type=raw,value=${{ steps.get_tag.outputs.tag }}
          type=raw,value=latest

    - name: Build and push Docker image
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        platforms: linux/amd64,linux/arm64